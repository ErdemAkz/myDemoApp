/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;

class AppTest {
    
    @Test void addValToRangeWorks(){
        App app = new App();
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0; i<5;i++){
            list.add (i); 
        }
        app.addValToRange(list,1,3,4);

        assertEquals(0, list.get(0));
        assertEquals(5, list.get(1));
        assertEquals(6, list.get(2));
        assertEquals(7, list.get(3));
        assertEquals(4, list.get(4));
    }


    @Test void negativeIndexControl(){
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0; i<5;i++){
            list.add (i); 
        }
        assertThrows(IllegalArgumentException.class, () -> {App.addValToRange(list,1,-3,4);});
    }


    @Test void nullListControl(){
        ArrayList<Integer> list=null;
        assertThrows(IllegalArgumentException.class, () -> {App.addValToRange(list,1,3,4);});
    }



    @Test void lastIsSmallerThanFirst(){
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0; i<5;i++){
            list.add (i); 
        }
        assertThrows(IllegalArgumentException.class, () -> {App.addValToRange(list,4,2,4);});
    }

    @Test void indexBiggerThanSize(){
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0; i<5;i++){
            list.add (i); 
        }
        assertThrows(IllegalArgumentException.class, () -> {App.addValToRange(list,5,6,4);});
    }
}
